// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  title     String
  content   String
  published Boolean @default(false)
}

model Set {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  rep        Int
  rpe        Decimal?
  weight     Decimal?
  isComplete Boolean
   
  actualReps Int?

  estiamtedOnerm Decimal?

  exerciseId String?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  exercise Exercise? @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  @@index([exerciseId])
}

model Exercise {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name     String? @db.VarChar(255)
  lift     String? @db.VarChar(55)
  sets     Int?
  reps     Int?

  onerm    Int?
  onermTop Int?

  weightTop Decimal?
  weightBottom Decimal?

  setWieght Decimal?
  setTopWeight Decimal?

  isEstimatedOnerm Boolean? @default(false)
  estimatedOnermIndex Int?

  actualSets Int?
  actualReps Int?
  isComplete Boolean @default(false)

  set    Set[]
  rpe    Decimal?
  weight Decimal?

  dayId String

  day Day @relation(fields: [dayId], references: [id], onDelete: Cascade)

  notes String? @db.Text

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([dayId])
}

model Day {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)

  exercise  Exercise[]
  isRestDay Boolean

  weekId String

  week Week @relation(fields: [weekId], references: [id], onDelete: Cascade)

  energyRating String?  @db.VarChar(1)
  isComplete   Boolean?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([weekId])
}

model Week {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)

  isTemplate Boolean?
  isDeleted Boolean @default(false)

  day Day[]

  blockId String?

  block Block? @relation(fields: [blockId], references: [id], onDelete: Cascade)

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([blockId])
}

model Block {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  creatorId String?

  isGlobal Boolean @default(false)

  name String @db.VarChar(255)

  isProgram Boolean

  isDeleted Boolean @default(false)

  userIdOfProgram String?
  isProgramActive Boolean?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  week Week[]
}

model UserProgram {
  id              String   @id @default(cuid())
  userId          String   @db.VarChar(255)
  templateId      String
  programId       String?
  isProgramActive Boolean
  isDeleted       Boolean  @default(false)
  createdAt       DateTime @default(now())
}

model OneRepMax {
  createdAt DateTime @default(now())

  userId String
  lift   String
  weight Decimal

  flield1 String?
  flield2 String?
  flield3 String?

  @@id([userId, lift])
}

model Lifts {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String

  name String

  isDeleted Boolean @default(false)

  lift Lift[]

  flield1 String?
  flield2 String?
  flield3 String?
}

model PrimaryLifts {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String @unique
  creadedBy String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model TrainerToClient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  trainerId String
  clientId  String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model Lift {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  createdAtUser DateTime @default(now())

  userId String

  liftId String

  isDeleted Boolean @default(false)

  lift     Lifts   @relation(fields: [liftId], references: [id], onDelete: Cascade)
  weight   Decimal
  reps     Int
  liftName String

  notes String? @db.Text

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([liftId])
}
