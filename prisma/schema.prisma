// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model CompDate {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String

  name String
  date String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?
}

model CompLift {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String

  name           String
  Age            String
  AgeClass       String
  BirthYearClass String
  Division       String
  Event          String

  BodyweightKg String?
  WeightClass  String?

  Squat1 String?
  Squat2 String?
  Squat3 String?
  Squat4 String?

  Bench1 String?
  Bench2 String?
  Bench3 String?
  Bench4 String?

  Deadlift1 String?
  Deadlift2 String?
  Deadlift3 String?
  Deadlift4 String?

  Total String?

  Place String?

  Dots         String?
  Wilks        String?
  Glossbrenner String?
  GoodLift     String?

  Federation String?

  Date String?

  MeetCountry String?
  MeetState   String?
  MeetTown    String?
  MeetName    String?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?
  flield6 String?
  flield7 String?
  flield8 String?
  flield9 String?
  flield0 String?
}

model CompLiftAddress {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId  String @unique
  address String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  title     String
  content   String
  published Boolean @default(false)
}

model Set {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  rep        Int
  rpe        Decimal?
  weight     Decimal?
  isComplete Boolean

  name String? @db.VarChar(255)
  lift String? @db.VarChar(55)

  userId    String?
  trainerId String?

  actualReps Int?

  estiamtedOnerm Decimal?

  exerciseId String?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  exercise Exercise? @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  @@index([exerciseId])
}

model SuperSet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)
  lift String? @db.VarChar(55)
  sets Int?
  reps Int?

  userId    String?
  trainerId String?

  repUnit String? @db.VarChar(55)

  weightType String? @db.VarChar(55)

  onerm    Int?
  onermTop Int?

  weightTop    Decimal?
  weightBottom Decimal?

  targetRpe Decimal?

  setWieght    Decimal?
  setTopWeight Decimal?

  isEstimatedOnerm    Boolean? @default(false)
  estimatedOnermIndex Int?

  actualSets Int?
  actualReps Int?
  isComplete Boolean @default(false)

  rpe    Decimal?
  weight Decimal?

  exerciseId String

  exercise Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  notes    String? @db.Text
  htmlLink String?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([exerciseId])
}

model Exercise {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)
  lift String? @db.VarChar(55)
  sets Int?
  reps Int?

  userId    String?
  trainerId String?

  repUnit String? @db.VarChar(55)

  weightType String? @db.VarChar(55)

  onerm    Int?
  onermTop Int?

  weightTop    Decimal?
  weightBottom Decimal?

  targetRpe Decimal?

  setWieght    Decimal?
  setTopWeight Decimal?

  isEstimatedOnerm    Boolean? @default(false)
  estimatedOnermIndex Int?

  tempoDown  Int?
  tempoPause Int?
  tempoUp    Int?

  actualSets Int?
  actualReps Int?
  isComplete Boolean @default(false)

  set    Set[]
  rpe    Decimal?
  weight Decimal?

  dayId String

  day Day @relation(fields: [dayId], references: [id], onDelete: Cascade)

  ss SuperSet[]

  notes    String? @db.Text
  htmlLink String?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([dayId])
}

model Day {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)

  userId    String?
  trainerId String?

  exercise  Exercise[]
  isRestDay Boolean

  weekId String

  warmupTemplateId String?

  week Week @relation(fields: [weekId], references: [id], onDelete: Cascade)

  energyRating String?  @default("A") @db.VarChar(1)
  isComplete   Boolean?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([weekId])
}

model Week {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String? @db.VarChar(255)

  isTemplate Boolean?
  isDeleted  Boolean  @default(false)

  userId    String?
  trainerId String?

  day Day[]

  blockId String?

  block Block? @relation(fields: [blockId], references: [id], onDelete: Cascade)

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  @@index([blockId])
}

model Block {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  creatorId String?

  isGlobal Boolean @default(false)

  name String @db.VarChar(255)

  isProgram Boolean

  isDeleted Boolean @default(false)

  userId    String?
  trainerId String?

  userIdOfProgram String?
  isProgramActive Boolean?

  isComplete  Boolean?
  isSecondary Boolean?

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?

  week Week[]
}

model UserProgram {
  id              String   @id @default(cuid())
  userId          String   @db.VarChar(255)
  trainerId       String?
  templateId      String
  programId       String?
  isProgramActive Boolean
  isDeleted       Boolean  @default(false)
  createdAt       DateTime @default(now())
}

model OneRepMax {
  createdAt DateTime @default(now())

  userId String
  lift   String
  weight Decimal

  flield1 String?
  flield2 String?
  flield3 String?

  @@id([userId, lift])
}

model Lifts {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String

  name String

  isDeleted Boolean @default(false)

  lift Lift[]

  flield1 String?
  flield2 String?
  flield3 String?
}

model PrimaryLifts {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name      String @unique
  creadedBy String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model TrainerToClient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  trainerId String
  clientId  String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model Lift {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  createdAtUser DateTime @default(now())

  userId    String
  trainerId String?

  liftId String

  isDeleted Boolean @default(false)

  lift     Lifts   @relation(fields: [liftId], references: [id], onDelete: Cascade)
  weight   Decimal
  reps     Int
  liftName String

  notes String? @db.Text

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([liftId])
}

model Goal {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String

  goal       String
  date       DateTime
  isComplete Boolean     @default(false)
  user       UserProfile @relation(fields: [userId], references: [id], onDelete: Cascade)

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([userId])
}

model DailyLog {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId      String
  UserProfile UserProfile @relation(fields: [userId], references: [id], onDelete: Cascade)

  weight   Decimal?
  fat      Decimal?
  carbs    Decimal?
  protein  Decimal?
  calories Decimal?

  steps Int?

  motivation Int?

  notes String? @db.Text

  sleepHrs     Decimal?
  sleepQuality Int?

  recovery Int?
  stress   Int?
  energy   Int?

  restingHeartRate Int?
  vo2Max           Int?

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([userId])
}

model UserProfile {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  DOB    DateTime?
  gender String?
  height Decimal?

  weight       Decimal?
  targetWeight Decimal?

  weightGoal            String?
  activityLevelTraining String?
  activityLevelRest     String?

  goals    Goal[]
  dailyLog DailyLog[]

  squatOneRepMax    Decimal?
  benchOneRepMax    Decimal?
  deadliftOneRepMax Decimal?

  sp1_1 Decimal @default(0.9)
  sp1_2 Decimal @default(0.91)
  sp1_3 Decimal @default(0.92)
  sp2_1 Decimal @default(0.95)
  sp2_2 Decimal @default(0.96)
  sp2_3 Decimal @default(0.97)
  sp3_1 Decimal @default(0.99)
  sp3_2 Decimal @default(1.0)
  sp3_3 Decimal @default(1.02)

  bp1_1 Decimal @default(0.9)
  bp1_2 Decimal @default(0.91)
  bp1_3 Decimal @default(0.92)
  bp2_1 Decimal @default(0.95)
  bp2_2 Decimal @default(0.96)
  bp2_3 Decimal @default(0.97)
  bp3_1 Decimal @default(0.99)
  bp3_2 Decimal @default(1.0)
  bp3_3 Decimal @default(1.02)

  dp1_1 Decimal @default(0.9)
  dp1_2 Decimal @default(0.91)
  dp1_3 Decimal @default(0.92)
  dp2_1 Decimal @default(0.95)
  dp2_2 Decimal @default(0.96)
  dp2_3 Decimal @default(0.97)
  dp3_1 Decimal @default(0.99)
  dp3_2 Decimal @default(1.0)
  dp3_3 Decimal @default(1.02)

  fatAdjustment     Decimal?
  carbAdjustment    Decimal?
  proteinAdjustment Decimal?

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([userId])
}

model Record {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  date DateTime @default(now())

  lift String
  wc   String

  gender String

  name   String
  weight Decimal

  userId String

  isDeleted Boolean @default(false)
}

model Warmup {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  notes String
  name  String
  link  String

  warmupTemplateId String
  warmupTemplate   WarmupTemplate @relation(fields: [warmupTemplateId], references: [id], onDelete: Cascade)

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([warmupTemplateId])
}

model WarmupTemplate {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  creatorId String

  name String

  isDeleted Boolean @default(false)

  warmups Warmup[]

  flield1 String?
  flield2 String?
  flield3 String?
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  firstName     String?
  lastName      String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  userProfiles  UserProfile[]

  isDiet         Boolean @default(false)
  isDietTrainer  Boolean @default(false)
  isPower        Boolean @default(false)
  isTrainer      Boolean @default(false)
  isClient       Boolean @default(true)
  isRecordEditor Boolean @default(false)
  isAdmin        Boolean @default(false)
  isSuper        Boolean @default(false)
  isCreator      Boolean @default(false)
  isRoot         Boolean @default(false)
  isHiit         Boolean @default(false)
  isHiitTrainer  Boolean @default(false)
  isPowerTrainer Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
  flield4 String?
  flield5 String?
  flield6 String?
  flield7 String?
  flield8 String?
  flield9 String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BaseIngredient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String @unique

  calories Decimal
  fat      Decimal
  carbs    Decimal
  protein  Decimal

  size Decimal

  unit String

  isScalable Boolean @default(true)

  ingredient Ingredient[]

  isGluetenFree Boolean @default(false)
  isVegan       Boolean @default(false)
  isVegetarian  Boolean @default(false)

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model Ingredient {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  baseIngredientId String
  baseIngredient   BaseIngredient @relation(fields: [baseIngredientId], references: [id], onDelete: Cascade)

  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  size Decimal

  unit String

  isScalable Boolean @default(true)

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?

  @@index([recipeId])
}

model Recipe {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String @unique

  ingredients Ingredient[]

  notes RecipeNote[]

  calories Decimal
  fat      Decimal
  carbs    Decimal
  protein  Decimal

  isGluetenFree Boolean @default(false)
  isVegan       Boolean @default(false)
  isVegetarian  Boolean @default(false)

  isScalable Boolean @default(true)

  size Decimal
  unit String

  isDeleted Boolean @default(false)

  flield1 String?
  flield2 String?
  flield3 String?
}

model RecipeNote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  note String

  @@index([recipeId])
}
